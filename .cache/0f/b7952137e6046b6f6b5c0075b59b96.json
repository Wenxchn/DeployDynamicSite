{"id":"node_modules/reducers/drop-while.js","dependencies":[{"name":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\package.json","includedInParent":true,"mtime":1603232443009},{"name":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducers\\package.json","includedInParent":true,"mtime":1603232442760},{"name":"reducible/reducible","loc":{"line":3,"column":24},"parent":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducers\\drop-while.js","resolved":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducible\\reducible.js"},{"name":"reducible/reduce","loc":{"line":4,"column":21},"parent":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducers\\drop-while.js","resolved":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducible\\reduce.js"},{"name":"reducible/is-error","loc":{"line":5,"column":22},"parent":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducers\\drop-while.js","resolved":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducible\\is-error.js"},{"name":"reducible/end","loc":{"line":6,"column":18},"parent":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducers\\drop-while.js","resolved":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducible\\end.js"}],"generated":{"js":"\"use strict\";\n\nvar reducible = require(\"reducible/reducible\")\nvar reduce = require(\"reducible/reduce\")\nvar isError = require(\"reducible/is-error\")\nvar end = require(\"reducible/end\")\n\nfunction dropWhile(source, predicate) {\n  /**\n  Returns a sequence of the items in `source` starting from the first\n  item for which `predicate(item)` returns `false`.\n\n  ## Example\n\n  var numbers = dropWhile([ 2, 7, 10, 23 ], function(value) {\n    return value < 10\n  })\n  print(numbers)   // => < 10 23 >\n  **/\n  return reducible(function reduceDropWhile(next, initial) {\n    var dropped = false\n    reduce(source, function reduceDropWhileSource(value, result) {\n      // If value is end of collection or is an error (which also includes\n      // end of collection) just pass it through, `reducible` will take care\n      // of everything.\n      if (value === end) return next(value, result)\n      if (isError(value)) return next(value, result)\n\n      // If already dropped all the intended items (if `dropped` is already\n      // being set to `true` or if current predicate returns `false`). Then\n      // just keep on passing values.\n      if (dropped || (dropped = !predicate(value))) return next(value, result)\n\n      return result\n    }, initial)\n  })\n}\n\nmodule.exports = dropWhile\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/reducers/drop-while.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/reducers/drop-while.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}}],"sources":{"node_modules/reducers/drop-while.js":"\"use strict\";\n\nvar reducible = require(\"reducible/reducible\")\nvar reduce = require(\"reducible/reduce\")\nvar isError = require(\"reducible/is-error\")\nvar end = require(\"reducible/end\")\n\nfunction dropWhile(source, predicate) {\n  /**\n  Returns a sequence of the items in `source` starting from the first\n  item for which `predicate(item)` returns `false`.\n\n  ## Example\n\n  var numbers = dropWhile([ 2, 7, 10, 23 ], function(value) {\n    return value < 10\n  })\n  print(numbers)   // => < 10 23 >\n  **/\n  return reducible(function reduceDropWhile(next, initial) {\n    var dropped = false\n    reduce(source, function reduceDropWhileSource(value, result) {\n      // If value is end of collection or is an error (which also includes\n      // end of collection) just pass it through, `reducible` will take care\n      // of everything.\n      if (value === end) return next(value, result)\n      if (isError(value)) return next(value, result)\n\n      // If already dropped all the intended items (if `dropped` is already\n      // being set to `true` or if current predicate returns `false`). Then\n      // just keep on passing values.\n      if (dropped || (dropped = !predicate(value))) return next(value, result)\n\n      return result\n    }, initial)\n  })\n}\n\nmodule.exports = dropWhile\n"},"lineCount":40}},"error":null,"hash":"f3824d775a2e674e39286b2e34a3d4ca","cacheData":{"env":{}}}