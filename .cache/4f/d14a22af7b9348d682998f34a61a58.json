{"id":"node_modules/reducers/fold.js","dependencies":[{"name":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\package.json","includedInParent":true,"mtime":1603232443009},{"name":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducers\\package.json","includedInParent":true,"mtime":1603232442760},{"name":"reducible/reduce","loc":{"line":3,"column":21},"parent":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducers\\fold.js","resolved":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducible\\reduce.js"},{"name":"reducible/is-error","loc":{"line":4,"column":22},"parent":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducers\\fold.js","resolved":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducible\\is-error.js"},{"name":"reducible/is-reduced","loc":{"line":5,"column":24},"parent":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducers\\fold.js","resolved":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducible\\is-reduced.js"},{"name":"reducible/end","loc":{"line":6,"column":18},"parent":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducers\\fold.js","resolved":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducible\\end.js"},{"name":"./hub","loc":{"line":7,"column":18},"parent":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducers\\fold.js","resolved":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducers\\hub.js"}],"generated":{"js":"\"use strict\";\n\nvar reduce = require(\"reducible/reduce\")\nvar isError = require(\"reducible/is-error\")\nvar isReduced = require(\"reducible/is-reduced\")\nvar end = require(\"reducible/end\")\nvar hub = require(\"./hub\")\n\nfunction Promise() {\n  this.delivered = false\n  this.next = void(0)\n  this.initial = void(0)\n}\nreduce.define(Promise, function reducePromise(promise, next, initial) {\n  if (promise.delivered) return reduce(promise.value, next, initial)\n  promise.next = next\n  promise.initial = initial\n})\n\nfunction deliver(promise, value) {\n  promise.delivered = true\n  promise.value = value\n  if (promise.next) reduce(value, promise.next, promise.initial)\n}\n\n\nfunction fold(source, next, initial) {\n  /**\n  Fold is just like `reduce` with a difference that `next` reducer / folder\n  function it takes has it's parameters reversed. One always needs `value`,\n  but not always accumulated one. To avoid conflict with array `reduce` we\n  have a `fold`.\n  **/\n  var promise = new Promise()\n  reduce(source, function fold(value, state) {\n    // If source is `end`-ed deliver accumulated `state`.\n    // If is source has an error, deliver that.\n    if (isError(value)) {\n      deliver(promise, value)\n      throw value\n    }\n    if (value === end) return deliver(promise, state)\n\n    // Accumulate new `state`\n    state = next(value, state)\n    // If already reduced, then deliver.\n    if (isReduced(state)) deliver(promise, state.value)\n\n    return state\n  }, initial)\n\n  return promise.delivered ? promise.value : hub(promise)\n}\n\nmodule.exports = fold\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/reducers/fold.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/reducers/fold.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}}],"sources":{"node_modules/reducers/fold.js":"\"use strict\";\n\nvar reduce = require(\"reducible/reduce\")\nvar isError = require(\"reducible/is-error\")\nvar isReduced = require(\"reducible/is-reduced\")\nvar end = require(\"reducible/end\")\nvar hub = require(\"./hub\")\n\nfunction Promise() {\n  this.delivered = false\n  this.next = void(0)\n  this.initial = void(0)\n}\nreduce.define(Promise, function reducePromise(promise, next, initial) {\n  if (promise.delivered) return reduce(promise.value, next, initial)\n  promise.next = next\n  promise.initial = initial\n})\n\nfunction deliver(promise, value) {\n  promise.delivered = true\n  promise.value = value\n  if (promise.next) reduce(value, promise.next, promise.initial)\n}\n\n\nfunction fold(source, next, initial) {\n  /**\n  Fold is just like `reduce` with a difference that `next` reducer / folder\n  function it takes has it's parameters reversed. One always needs `value`,\n  but not always accumulated one. To avoid conflict with array `reduce` we\n  have a `fold`.\n  **/\n  var promise = new Promise()\n  reduce(source, function fold(value, state) {\n    // If source is `end`-ed deliver accumulated `state`.\n    // If is source has an error, deliver that.\n    if (isError(value)) {\n      deliver(promise, value)\n      throw value\n    }\n    if (value === end) return deliver(promise, state)\n\n    // Accumulate new `state`\n    state = next(value, state)\n    // If already reduced, then deliver.\n    if (isReduced(state)) deliver(promise, state.value)\n\n    return state\n  }, initial)\n\n  return promise.delivered ? promise.value : hub(promise)\n}\n\nmodule.exports = fold\n"},"lineCount":56}},"error":null,"hash":"7e153bf2db70d50469f4b3bafc4ea0c8","cacheData":{"env":{}}}