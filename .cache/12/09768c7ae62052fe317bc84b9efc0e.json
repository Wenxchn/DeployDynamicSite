{"id":"node_modules/reducers/take.js","dependencies":[{"name":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\package.json","includedInParent":true,"mtime":1603232443009},{"name":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducers\\package.json","includedInParent":true,"mtime":1603232442760},{"name":"reducible/reducible","loc":{"line":3,"column":24},"parent":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducers\\take.js","resolved":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducible\\reducible.js"},{"name":"reducible/reduce","loc":{"line":4,"column":21},"parent":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducers\\take.js","resolved":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducible\\reduce.js"},{"name":"reducible/end","loc":{"line":5,"column":18},"parent":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducers\\take.js","resolved":"C:\\Users\\wenxc\\Desktop\\DynamicSite\\node_modules\\reducible\\end.js"}],"generated":{"js":"\"use strict\";\n\nvar reducible = require(\"reducible/reducible\")\nvar reduce = require(\"reducible/reduce\")\nvar end = require(\"reducible/end\")\n\nfunction take(source, n) {\n  /**\n  Returns sequence of first `n` items of the given `source`. If `source`\n  contains less items than `n` then that's how  much items return sequence\n  will contain.\n\n  ## Example\n\n  print(take([ 1, 2, 3, 4, 5 ], 2))   // => < 1 2 >\n  print(take([ 1, 2, 3 ], 5))         // => < 1 2 3 >\n  **/\n\n  // If take `0` then optimize by returning an empty if less then `0`\n  // then just return `source` back.\n  if (n === 0) return void(0)\n  if (n < 0) return source\n  return reducible(function reduceTake(next, initial) {\n    // Capture `n` into count, since modifying `n` directly will have side\n    // effects on subsequent calls.\n    var count = n\n    reduce(source, function reduceTakeSource(value, result) {\n      count = count - 1\n      result = next(value, result)\n\n      // If we have not taken `n` items yet just pass result back. Otherwise\n      // pass `end` of stream to a consumer. Note `reducible` will return\n      // `reduced(result)` back signaling source it should stop.\n      return count > 0 ? result :\n             next(end)\n    }, initial)\n  })\n}\n\nmodule.exports = take\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/reducers/take.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/reducers/take.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}}],"sources":{"node_modules/reducers/take.js":"\"use strict\";\n\nvar reducible = require(\"reducible/reducible\")\nvar reduce = require(\"reducible/reduce\")\nvar end = require(\"reducible/end\")\n\nfunction take(source, n) {\n  /**\n  Returns sequence of first `n` items of the given `source`. If `source`\n  contains less items than `n` then that's how  much items return sequence\n  will contain.\n\n  ## Example\n\n  print(take([ 1, 2, 3, 4, 5 ], 2))   // => < 1 2 >\n  print(take([ 1, 2, 3 ], 5))         // => < 1 2 3 >\n  **/\n\n  // If take `0` then optimize by returning an empty if less then `0`\n  // then just return `source` back.\n  if (n === 0) return void(0)\n  if (n < 0) return source\n  return reducible(function reduceTake(next, initial) {\n    // Capture `n` into count, since modifying `n` directly will have side\n    // effects on subsequent calls.\n    var count = n\n    reduce(source, function reduceTakeSource(value, result) {\n      count = count - 1\n      result = next(value, result)\n\n      // If we have not taken `n` items yet just pass result back. Otherwise\n      // pass `end` of stream to a consumer. Note `reducible` will return\n      // `reduced(result)` back signaling source it should stop.\n      return count > 0 ? result :\n             next(end)\n    }, initial)\n  })\n}\n\nmodule.exports = take\n"},"lineCount":41}},"error":null,"hash":"70304b9c4658a1a9e259e347c7d76e65","cacheData":{"env":{}}}